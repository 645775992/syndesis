{"version":3,"file":"ConnectionsPage.js","sourceRoot":"","sources":["../../src/pages/ConnectionsPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { WithConnections } from \"@syndesis/api\";\nimport { IConnection } from \"@syndesis/models\";\nimport {\n  IActiveFilter,\n  IFilterType,\n  IListViewToolbarAbstractComponent,\n  ISortType,\n  ListViewToolbarAbstractComponent\n} from \"@syndesis/ui\";\nimport * as React from 'react';\nimport { ConnectionsAppContext } from \"../ConnectionsAppContext\";\nimport { ConnectionsListView } from \"../components/ConnectionsListView\";\n\nfunction getFilteredAndSortedConnections(\n  connections: IConnection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: IConnection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: 'Filter by Name',\n  title: 'Name'\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: 'Name'\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ConnectionsPage extends ListViewToolbarAbstractComponent<\n  {},\n  IListViewToolbarAbstractComponent\n> {\n  public state = {\n    activeFilters: [] as IActiveFilter[],\n    currentFilterType: filterByName,\n    currentSortType: sortByName.title,\n    currentValue: '',\n    filterCategory: null,\n    isSortAscending: true\n  };\n\n  public render() {\n    return (\n      <ConnectionsAppContext.Consumer>\n        {({ baseurl }) =>\n          <WithConnections>\n            {({ data, loading, hasData }) => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                data.items,\n                this.state.activeFilters,\n                this.state.currentSortType,\n                this.state.isSortAscending\n              );\n              return (\n                <ConnectionsListView\n                  loading={!hasData && loading}\n                  baseurl={baseurl}\n                  connections={filteredAndSortedConnections}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...this.state}\n                  onUpdateCurrentValue={this.onUpdateCurrentValue}\n                  onValueKeyPress={this.onValueKeyPress}\n                  onFilterAdded={this.onFilterAdded}\n                  onSelectFilterType={this.onSelectFilterType}\n                  onFilterValueSelected={this.onFilterValueSelected}\n                  onRemoveFilter={this.onRemoveFilter}\n                  onClearFilters={this.onClearFilters}\n                  onToggleCurrentSortDirection={\n                    this.onToggleCurrentSortDirection\n                  }\n                  onUpdateCurrentSortType={this.onUpdateCurrentSortType}\n                />\n              );\n            }}\n          </WithConnections>\n        }\n      </ConnectionsAppContext.Consumer>\n    );\n  }\n}\n"]}