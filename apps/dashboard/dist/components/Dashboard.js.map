{"version":3,"file":"Dashboard.js","sourceRoot":"","sources":["../../src/components/Dashboard.tsx"],"names":[],"mappings":"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","sourcesContent":["import { IConnection, IIntegration, IIntegrationsMetrics, IMonitoredIntegration } from \"@syndesis/models\";\nimport { AggregatedMetricCard, ConnectionCard, ConnectionsGrid } from \"@syndesis/ui\";\nimport { getConnectionIcon } from \"@syndesis/utils\";\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\n// import './Dashboard.css';\nimport { ConnectionsMetric } from \"./ConnectionsMetric\";\nimport { IntegrationBoard } from \"./IntegrationBoard\";\nimport { RecentUpdates } from \"./RecentUpdates\";\nimport { TopIntegrations } from \"./TopIntegrations\";\nimport { UptimeMetric } from \"./UptimeMetric\";\n\nexport interface IIntegrationsPageProps {\n  integrationsLoaded: boolean;\n  connectionsLoaded: boolean;\n  metricsLoaded: boolean;\n  integrationsCount: number;\n  integrationsErrorCount: number;\n  connections: IConnection[];\n  connectionsCount: number;\n  metrics: IIntegrationsMetrics;\n  topIntegrations: IMonitoredIntegration[];\n  recentlyUpdatedIntegrations: IIntegration[];\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n}\n\nexport class Dashboard extends React.Component<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <div className={'container-fluid'}>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <h1 className={'Dashboard-header__title'}>System metric</h1>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={'/integrations'}>View All Integrations</Link>\n                  <Link to={'/integrations/new'} className={'btn btn-primary'}>\n                    Create Integration\n                  </Link>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              <AggregatedMetricCard\n                title={`${this.props.integrationsCount} Integrations`}\n                ok={\n                  this.props.integrationsCount -\n                  this.props.integrationsErrorCount\n                }\n                error={this.props.integrationsErrorCount}\n              />\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              <ConnectionsMetric count={this.props.connectionsCount} />\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              <AggregatedMetricCard\n                title={`${this.props.metrics.messages} Total Messages`}\n                ok={this.props.metrics.messages - this.props.metrics.errors}\n                error={this.props.metrics.errors}\n              />\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              <UptimeMetric start={this.props.metrics.start} />\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              <TopIntegrations\n                loading={!this.props.integrationsLoaded}\n                topIntegrations={this.props.topIntegrations}\n              />\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              <Grid.Row>\n                <Grid.Col sm={12}>\n                  <IntegrationBoard\n                    runningIntegrations={this.props.runningIntegrations}\n                    pendingIntegrations={this.props.pendingIntegrations}\n                    stoppedIntegrations={this.props.stoppedIntegrations}\n                  />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col sm={12}>\n                  <RecentUpdates\n                    loading={!this.props.integrationsLoaded}\n                    recentlyUpdatedIntegrations={\n                      this.props.recentlyUpdatedIntegrations\n                    }\n                  />\n                </Grid.Col>\n              </Grid.Row>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <h1 className={'Dashboard-header__title'}>Connections</h1>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={'/connections'}>View All Connections</Link>\n                  <Link to={'/connections/new'} className={'btn btn-primary'}>\n                    Create Connection\n                  </Link>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <ConnectionsGrid loading={!this.props.connectionsLoaded}>\n          {this.props.connections.map((c, index) => (\n            <ConnectionCard\n              name={c.name}\n              description={c.description || ''}\n              icon={getConnectionIcon(c, process.env.PUBLIC_URL)}\n              key={index}\n            />\n          ))}\n        </ConnectionsGrid>\n      </div>\n    );\n  }\n}\n"]}