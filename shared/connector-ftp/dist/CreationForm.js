import * as React from 'react';
export class CreationForm extends React.Component {
    render() {
        return (React.createElement("div", { className: "col-md-8 col-md-offset-2", style: { marginTop: 20 } },
            React.createElement("div", { className: "card-pf" },
                React.createElement("div", { className: "card-pf-heading" },
                    React.createElement("h2", { className: "card-pf-title" }, "FTP Configuration")),
                React.createElement("div", { className: "card-pf-body" },
                    React.createElement("div", null,
                        React.createElement("form", { className: "form-horizontal ng-untouched ng-pristine ng-invalid" },
                            React.createElement("div", { className: "form-group" },
                                React.createElement("div", { className: "col-sm-12" },
                                    React.createElement("div", { className: "ng-untouched ng-pristine ng-invalid" },
                                        React.createElement("div", { "_ngcontent-c15": "", className: "text-right" },
                                            React.createElement("button", { "_ngcontent-c15": "", className: "btn btn-primary", disabled: true }, "Validate"))))),
                            React.createElement("p", { className: "fields-status-pf" },
                                "The fields marked with ",
                                React.createElement("span", { className: "required-pf" }, "*"),
                                " are required."),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3 required-pf", htmlFor: "host" },
                                        "Host",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-invalid", autoComplete: "on", name: "host", placeholder: "", type: "text", required: true, id: "host" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "username" },
                                        "User name",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "on", name: "username", placeholder: "", type: "text", id: "username" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "password" },
                                        "Password",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "off", name: "password", placeholder: "", type: "password", id: "password" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3 required-pf", htmlFor: "port" },
                                        "Port",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "on", name: "port", placeholder: "", type: "number", required: true, id: "port" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "connectTimeout" },
                                        "Connect timeout",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "on", name: "connectTimeout", placeholder: "", type: "number", id: "connectTimeout" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "reconnectDelay" },
                                        "Reconnect delay",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "on", name: "reconnectDelay", placeholder: "", type: "number", id: "reconnectDelay" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "maximumReconnectAttempts" },
                                        "Maximum reconnect attempts",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "on", name: "maximumReconnectAttempts", placeholder: "", type: "number", id: "maximumReconnectAttempts" }))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "binary" },
                                        "Binary file transfer mode",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("select", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", name: "binary", id: "binary" },
                                            React.createElement("option", { "_ngcontent-c16": "", value: "0: false" }, "No"),
                                            React.createElement("option", { "_ngcontent-c16": "", value: "1: true" }, "Yes"))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "passiveMode" },
                                        "Passive connection mode",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("select", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", name: "passiveMode", id: "passiveMode" },
                                            React.createElement("option", { "_ngcontent-c16": "", value: "0: false" }, "No"),
                                            React.createElement("option", { "_ngcontent-c16": "", value: "1: true" }, "Yes"))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "disconnect" },
                                        "Disconnect from server after use",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("select", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", id: "disconnect" },
                                            React.createElement("option", { "_ngcontent-c16": "", value: "0: false" }, "No"),
                                            React.createElement("option", { "_ngcontent-c16": "", value: "1: true" }, "Yes"))))),
                            React.createElement("div", null,
                                React.createElement("div", { "_ngcontent-c16": "", className: "form-group ng-untouched ng-pristine ng-invalid" },
                                    React.createElement("label", { "_ngcontent-c16": "", className: "control-label col-sm-3", htmlFor: "timeout" },
                                        "Data timeout",
                                        React.createElement("div", { "_ngcontent-c16": "", className: "inline-block hint-icon" },
                                            React.createElement("span", { "_ngcontent-c16": "", className: "glyphicon glyphicon-info-sign" }))),
                                    React.createElement("div", { "_ngcontent-c16": "", className: "col-sm-9" },
                                        React.createElement("div", { "_ngcontent-c16": "" },
                                            React.createElement("input", { "_ngcontent-c16": "", className: "form-control ng-untouched ng-pristine ng-valid", autoComplete: "on", name: "timeout", placeholder: "", type: "number", id: "timeout" })))))))))));
    }
}
//# sourceMappingURL=CreationForm.js.map