{"version":3,"file":"IntegrationStatusDetail.js","sourceRoot":"","sources":["../src/IntegrationStatusDetail.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAW5D,MAAM,OAAO,uBAAwB,SAAQ,KAAK,CAAC,SAElD;IACQ,MAAM;QACX,IAAI,YAAY,GAAG,SAAS,CAAC;QAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YAC9B,KAAK,WAAW;gBACd,YAAY,GAAG,aAAa,CAAC;gBAC7B,MAAM;YACR,KAAK,aAAa;gBAChB,YAAY,GAAG,aAAa,CAAC;gBAC7B,MAAM;SACT;QACD,OAAO,CACL,6BAAK,SAAS,EAAE,2BAA2B,IACxC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CACrE,oBAAC,mBAAmB,IAClB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GACvB,CACH,CAAC,CAAC,CAAC,CACF;YACE,oBAAC,OAAO,IAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;YACvC,YAAY,CACZ,CACJ,CACG,CACP,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationProgress } from './IntegrationProgress';\n\n// import './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: string;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = 'Pending';\n    switch (this.props.targetState) {\n      case 'Published':\n        fallbackText = 'Starting...';\n        break;\n      case 'Unpublished':\n        fallbackText = 'Stopping...';\n        break;\n    }\n    return (\n      <div className={'integration-status-detail'}>\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <IntegrationProgress\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n"]}