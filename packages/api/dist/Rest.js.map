{"version":3,"file":"Rest.js","sourceRoot":"","sources":["../src/Rest.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport equal from 'react-fast-compare';\n\nexport interface IHeader {\n  [s: string]: string;\n}\n\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT';\n  headers?: IHeader;\n  body?: any;\n  contentType?: string;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  contentType = 'application/json; charset=utf-8'\n}: IFetch) {\n  return fetch(url, {\n    body: body ? JSON.stringify(body) : undefined,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': contentType,\n      ...headers\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n    referrer: 'no-referrer'\n  });\n}\n\nexport interface ISaveProps {\n  url: string;\n  data: any;\n}\n\nexport interface IRestState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n\n  read(): Promise<void>;\n\n  save(props: ISaveProps): void;\n}\n\nexport interface IRestProps<T> {\n  autoload?: boolean;\n  baseUrl: string;\n  poll?: number;\n  url: string;\n  headers?: IHeader;\n  contentType?: string;\n  defaultValue: T;\n\n  children(props: IRestState<T>): any;\n}\n\nexport class Rest<T> extends React.Component<IRestProps<T>, IRestState<T>> {\n  public static defaultProps = {\n    autoload: true\n  };\n\n  public pollingTimer?: number;\n\n  public constructor(props: IRestProps<T>) {\n    super(props);\n    this.state = {\n      data: this.props.defaultValue,\n      error: false,\n      hasData: false,\n      loading: true,\n      read: this.read,\n      save: this.onSave\n    };\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    if (this.props.autoload) {\n      this.read();\n      if (this.props.poll) {\n        this.startPolling();\n      }\n    }\n  }\n\n  public async componentDidUpdate(prevProps: IRestProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n\n    if (prevProps.poll !== this.props.poll) {\n      if (this.props.poll) {\n        this.startPolling();\n      } else {\n        this.stopPolling();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IRestProps<T>,\n    nextState: IRestState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n\n  public async read() {\n    try {\n      this.setState({\n        loading: true\n      });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n      } else {\n        data = await response.text();\n      }\n      this.setState({\n        data,\n        hasData: true,\n        loading: false\n      });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false\n      });\n    }\n  }\n\n  public async onSave({ url, data }: ISaveProps) {\n    this.setState({\n      loading: true\n    });\n    try {\n      const response = await callFetch({\n        body: data,\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'PUT',\n        url: `${this.props.baseUrl}${url || this.props.url}`\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      setTimeout(() => this.read(), 5000); // TODO: figure out why this is needed\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false\n      });\n    }\n  }\n\n  public startPolling() {\n    this.stopPolling();\n    this.pollingTimer = setInterval(this.poller, this.props.poll);\n  }\n\n  public poller() {\n    if (!this.state.loading) {\n      this.read();\n    }\n  }\n\n  public stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n"]}