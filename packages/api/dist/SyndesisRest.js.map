{"version":3,"file":"SyndesisRest.js","sourceRoot":"","sources":["../src/SyndesisRest.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAc,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAalC,MAAM,OAAO,YAAgB,SAAQ,KAAK,CAAC,SAAgC;IAClE,MAAM;QACX,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE7C,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;QAE5C,OAAO,CACL,oBAAC,UAAU,CAAC,QAAQ,QACjB,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,oBAAC,YAAY,kBACX,OAAO,EAAE,MAAM,EACf,GAAG,EAAE,GAAG,IACJ,KAAK,IACT,OAAO,EAAE;gBACP,qBAAqB,EAAE,SAAS;gBAChC,0BAA0B,EAAE,GAAG,KAAK,EAAE;gBACtC,kBAAkB,EAAE,OAAO;aAC5B,IACD,CACH,CACmB,CACvB,CAAC;IACJ,CAAC;CACF","sourcesContent":["import * as React from 'react';\nimport { ApiContext } from \"./ApiContext\";\nimport { IRestState, Rest } from './Rest';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisRestProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  poll?: number;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n\n  children(props: IRestState<T>): any;\n}\n\nexport class SyndesisRest<T> extends React.Component<ISyndesisRestProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const RestOrStream = stream ? Stream : Rest;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, token }) => (\n          <RestOrStream\n            baseUrl={apiUri}\n            url={url}\n            {...props}\n            headers={{\n              'SYNDESIS-XSRF-TOKEN': 'awesome',\n              'X-Forwarded-Access-Token': `${token}`,\n              'X-Forwarded-User': 'admin'\n            }}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n"]}