{"version":3,"file":"WithMonitoredIntegrations.js","sourceRoot":"","sources":["../src/WithMonitoredIntegrations.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAWtD,MAAM,OAAO,yBAA0B,SAAQ,KAAK,CAAC,SAEpD;IACQ,MAAM;QACX,OAAO,CACL,oBAAC,gBAAgB,QACd,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CACrC,oBAAC,YAAY,IACX,GAAG,EAAE,iCAAiC,EACtC,IAAI,EAAE,IAAI,EACV,YAAY,EAAE,EAAE,IAEf,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE;YACzB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBACzB,GAAG,KAAK;gBACR,IAAI,EAAE;oBACJ,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAC3B,CAAC,CAAe,EAAyB,EAAE,CAAC,CAAC;wBAC3C,WAAW,EAAE,CAAC;wBACd,UAAU,EAAE,WAAW,CAAC,IAAI,CAC1B,CAAC,CAAyB,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,EAAE,CACxD;qBACF,CAAC,CACH;oBACD,UAAU,EAAE,YAAY,CAAC,UAAU;iBACpC;aACF,CAAC,CAAC;QACL,CAAC,CACY,CAChB,CACgB,CACpB,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { IIntegration, IIntegrationMonitoring, IMonitoredIntegration } from \"@syndesis/models\";\nimport * as React from 'react';\nimport { IRestState } from \"./Rest\";\nimport { SyndesisRest } from \"./SyndesisRest\";\nimport { WithIntegrations } from \"./WithIntegrations\";\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IMonitoredIntegration[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  children(props: IRestState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public render() {\n    return (\n      <WithIntegrations>\n        {({ data: integrations, ...props }) => (\n          <SyndesisRest<IIntegrationMonitoring[]>\n            url={'/api/v1/monitoring/integrations'}\n            poll={5000}\n            defaultValue={[]}\n          >\n            {({ data: monitorings }) => {\n              return this.props.children({\n                ...props,\n                data: {\n                  items: integrations.items.map(\n                    (i: IIntegration): IMonitoredIntegration => ({\n                      integration: i,\n                      monitoring: monitorings.find(\n                        (m: IIntegrationMonitoring) => m.integrationId === i.id\n                      )\n                    })\n                  ),\n                  totalCount: integrations.totalCount\n                }\n              });\n            }}\n          </SyndesisRest>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n"]}