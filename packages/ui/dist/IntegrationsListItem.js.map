{"version":3,"file":"IntegrationsListItem.js","sourceRoot":"","sources":["../src/IntegrationsListItem.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC3E,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAapE,MAAM,OAAO,oBAAqB,SAAQ,KAAK,CAAC,SAE/C;IACQ,MAAM;QACX,OAAO,CACL,oBAAC,QAAQ,CAAC,IAAI,IACZ,OAAO,EACL;gBACG,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC,CACvC,oBAAC,uBAAuB,IACtB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EACjC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAC7C,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAC3C,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,iBAAiB,IAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,GAAI,CAC7D;gBACD,oBAAC,aAAa,IACZ,EAAE,EAAE,eAAe,IAAI,CAAC,KAAK,CAAC,aAAa,cAAc,EACzD,SAAS,EAAE,IAAI;oBAEf,oBAAC,QAAQ,mBAAoB,CACf,CACZ,EAER,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EACnC,WAAW,EACT,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CACnC;gBACE,oBAAC,IAAI,IAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,oBAAoB,GAAI;yCAE/C,CACJ,CAAC,CAAC,CAAC,CACF,EAAE,CACH,EAEH,aAAa,EAAE,IAAI,EACnB,WAAW,EAAE,oBAAC,QAAQ,CAAC,IAAI,IAAC,IAAI,EAAE,MAAM,GAAI,EAC5C,OAAO,EAAE,KAAK,GACd,CACH,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { DropdownKebab, Icon, ListView, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\n\nexport interface IIntegrationsListItemProps {\n  integrationId: string;\n  integrationName: string;\n  currentState: string;\n  targetState: string;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={\n          <div>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n              />\n            ) : (\n              <IntegrationStatus currentState={this.props.currentState} />\n            )}\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              <MenuItem>Action 2</MenuItem>\n            </DropdownKebab>\n          </div>\n        }\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              Configuration Required\n            </>\n          ) : (\n            ''\n          )\n        }\n        hideCloseIcon={true}\n        leftContent={<ListView.Icon name={'gear'} />}\n        stacked={false}\n      />\n    );\n  }\n}\n"]}