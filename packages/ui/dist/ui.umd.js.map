{"version":3,"file":"ui.umd.js","sources":["../src/AggregatedMetricCard.tsx","../src/ConnectionCard.tsx","../src/ConnectionSkeleton.tsx","../src/ConnectionsGrid.tsx","../src/IntegrationProgress.tsx","../src/IntegrationsList.tsx","../src/IntegrationStatus.tsx","../src/IntegrationStatusDetail.tsx","../src/IntegrationsListItem.tsx","../src/UnrecoverableError.tsx","../src/ModuleLoader.tsx","../src/IntegrationsListSkeleton.tsx"],"sourcesContent":["import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>{this.props.title}</AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              {this.props.ok}{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              {this.props.error}\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionProps {\n  name: string;\n  description: string;\n  icon: string;\n}\n\nexport class ConnectionCard extends React.PureComponent<IConnectionProps> {\n  public render() {\n    return (\n      <Card matchHeight={true}>\n        <Card.Body>\n          <EmptyState>\n            <div className=\"blank-slate-pf-icon\">\n              <img src={this.props.icon} alt={this.props.name} width={46} />\n            </div>\n            <EmptyState.Title>{this.props.name}</EmptyState.Title>\n            <EmptyState.Info>{this.props.description}</EmptyState.Info>\n          </EmptyState>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ConnectionSkeleton } from './ConnectionSkeleton';\n\nexport interface IConnectionsGridProps {\n  loading: boolean;\n  children: JSX.Element[];\n}\n\nexport class ConnectionsGrid extends React.Component<IConnectionsGridProps> {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>\n          {this.props.loading\n            ? new Array(5).fill(0).map((_, index) => (\n                <CardGrid.Col sm={6} md={3} key={index}>\n                  <ConnectionSkeleton key={index} />\n                </CardGrid.Col>\n              ))\n            : this.props.children.map((c: any, index: number) => (\n                <CardGrid.Col sm={6} md={3} key={index}>\n                  {c}\n                </CardGrid.Col>\n              ))}\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationProgressProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n}\n\nexport class IntegrationProgress extends React.PureComponent<\n  IIntegrationProgressProps\n> {\n  public render() {\n    return (\n      <div>\n        <div>\n          {this.props.value} ( {this.props.currentStep} /{' '}\n          {this.props.totalSteps} )\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationStatusProps {\n  currentState: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === 'Published' ||\n      this.props.currentState === 'Pending'\n        ? 'primary'\n        : 'default';\n    let label = 'Pending';\n    switch (this.props.currentState) {\n      case 'Published':\n        label = 'Published';\n        break;\n      case 'Unpublished':\n        label = 'Unpublished';\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationProgress } from './IntegrationProgress';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: string;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = 'Pending';\n    switch (this.props.targetState) {\n      case 'Published':\n        fallbackText = 'Starting...';\n        break;\n      case 'Unpublished':\n        fallbackText = 'Stopping...';\n        break;\n    }\n    return (\n      <div className={'integration-status-detail'}>\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <IntegrationProgress\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { DropdownKebab, Icon, ListView, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\n\nexport interface IIntegrationsListItemProps {\n  integrationId: string;\n  integrationName: string;\n  currentState: string;\n  targetState: string;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={\n          <div>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n              />\n            ) : (\n              <IntegrationStatus currentState={this.props.currentState} />\n            )}\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              <MenuItem>Action 2</MenuItem>\n            </DropdownKebab>\n          </div>\n        }\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              Configuration Required\n            </>\n          ) : (\n            ''\n          )\n        }\n        hideCloseIcon={true}\n        leftContent={<ListView.Icon name={'gear'} />}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport const UnrecoverableError = () => (\n  <EmptyState>\n    <EmptyState.Icon />\n    <EmptyState.Title>Something is wrong</EmptyState.Title>\n    <EmptyState.Info>\n      An error occurred while talking with the server.\n    </EmptyState.Info>\n    <EmptyState.Help>Please check your internet connection.</EmptyState.Help>\n    <EmptyState.Action>\n      <a href={'.'} className={'btn btn-lg btn-primary'}>\n        Refresh\n      </a>\n    </EmptyState.Action>\n  </EmptyState>\n);\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { LoadingComponentProps } from 'react-loadable';\n\nimport './ModuleLoader.css';\nimport { UnrecoverableError } from './UnrecoverableError';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      return <UnrecoverableError />;\n    } else if (this.props.pastDelay) {\n      return (\n        <div className={'ModuleLoader'}>\n          <Spinner loading={true} size={'lg'} />\n        </div>\n      );\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IIntegrationsListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const IntegrationsListSkeleton = ({\n  width,\n  style,\n}: IIntegrationsListSkeletonProps) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"250\" r=\"16\" />\n    <circle cx=\"70\" cy=\"250\" r=\"16\" />\n    <rect x=\"105\" y=\"245\" rx=\"5\" ry=\"5\" width=\"225\" height=\"15\" />\n    <rect x={width - 100} y=\"245\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"320\" r=\"16\" />\n    <circle cx=\"70\" cy=\"320\" r=\"16\" />\n    <rect x=\"105\" y=\"315\" rx=\"5\" ry=\"5\" width=\"165\" height=\"15\" />\n    <rect x={width - 100} y=\"315\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n"],"names":["tslib_1.__extends","AggregatedMetricCard","React.createElement","Card","accented","aggregated","matchHeight","Title","AggregateStatusCount","this","props","title","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","name","ok","error","React.PureComponent","ConnectionCard","EmptyState","className","src","icon","alt","width","Info","description","ConnectionSkeleton","ContentLoader","height","speed","primaryColor","secondaryColor","cx","cy","r","x","y","rx","ry","ConnectionsGrid","CardGrid","fluid","Row","loading","Array","fill","map","_","index","Col","sm","md","key","children","c","React.Component","IntegrationProgress","value","currentStep","totalSteps","ProgressBar","now","max","style","IntegrationsList","ListView","IntegrationStatus","labelType","currentState","label","Label","IntegrationStatusDetail","fallbackText","targetState","Spinner","inline","IntegrationsListItem","Item","actions","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","DropdownKebab","id","integrationId","pullRight","MenuItem","heading","integrationName","isConfigurationRequired","hideCloseIcon","leftContent","stacked","UnrecoverableError","Help","Action","href","ModuleLoader","timedOut","pastDelay","size","_a"],"mappings":"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"}