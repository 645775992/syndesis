{"version":3,"file":"PfVerticalNavItem.js","sourceRoot":"","sources":["../src/PfVerticalNavItem.tsx"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAcxC,SAAS,iBAAiB,CAAC,EACzB,SAAS,EACT,KAAK,EACL,QAAQ,EAAE,YAAY,EACtB,IAAI,EACJ,QAAQ,EACR,MAAM,EACN,EAAE,EACF,KAAK,EACL,QAAQ,EACR,GAAG,IAAI,EACY;IACnB,MAAM,IAAI,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;IAEvD,yFAAyF;IACzF,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;IAE9E,MAAM,eAAe,GAAG,CAAC,EACvB,QAAQ,EAAE,aAAa,EACvB,KAAK,EAIN,EAAE,EAAE;QACH,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,YAAY;YAC9B,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC;YACpC,CAAC,CAAC,KAAK,CAAC,CAAC;QAEX,OAAO,CACL,4BACE,SAAS,EAAE,UAAU,CAAC,iBAAiB,EAAE;gBACvC,MAAM,EAAE,QAAQ;aACjB,CAAC;YAEF,oBAAC,IAAI,kBACH,EAAE,EAAE,EAAE,EACN,QAAQ,EACN,oBAAC,KAAK,CAAC,QAAQ;oBACb,8BAAM,SAAS,EAAE,IAAI,GAAI;oBACzB,8BAAM,SAAS,EAAC,uBAAuB,IAAE,KAAK,CAAQ;oBACtD,6BAAK,SAAS,EAAC,oBAAoB,GAAG,CACvB,IAEf,IAAI,EACR;YACD,QAAQ,CACN,CACN,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,KAAK,IACJ,IAAI,EAAE,WAAW,EACjB,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,eAAe,GACzB,CACH,CAAC;AACJ,CAAC;AAED,iBAAiB,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;AAE7D,OAAO,EAAE,iBAAiB,EAAE,CAAC","sourcesContent":["import classNames from 'classnames';\nimport { VerticalNav } from 'patternfly-react';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li\n        className={classNames('list-group-item', {\n          active: isActive\n        })}\n      >\n        <Link\n          to={to}\n          children={\n            <React.Fragment>\n              <span className={icon} />\n              <span className=\"list-group-item-value\">{label}</span>\n              <div className=\"badge-container-pf\" />\n            </React.Fragment>\n          }\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = VerticalNav.Item.displayName;\n\nexport { PfVerticalNavItem };\n"]}