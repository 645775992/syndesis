{"version":3,"file":"IntegrationsListView.js","sourceRoot":"","sources":["../../src/components/IntegrationsListView.tsx"],"names":[],"mappings":"AACA,OAAO,EACL,gBAAgB,EAChB,oBAAoB,EACpB,wBAAwB,EAExB,eAAe,EAChB,MAAM,cAAc,CAAC;AACtB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAQxC,MAAM,OAAO,oBAAqB,SAAQ,KAAK,CAAC,SAE/C;IACQ,MAAM;QACX,OAAO,CACL;YACE,oBAAC,eAAe,oBAAK,IAAI,CAAC,KAAK;gBAC7B,6BAAK,SAAS,EAAC,YAAY;oBACzB,oBAAC,IAAI,IACH,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS,EAChC,SAAS,EAAE,iBAAiB,aAGvB;oBACP,oBAAC,IAAI,IACH,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,MAAM,EAC7B,SAAS,EAAE,iBAAiB,yBAGvB,CACH,CACU;YAClB,6BAAK,SAAS,EAAE,iBAAiB,IAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CACpB,oBAAC,wBAAwB,IACvB,KAAK,EAAE,GAAG,EACV,KAAK,EAAE;oBACL,eAAe,EAAE,MAAM;oBACvB,SAAS,EAAE,EAAE;iBACd,GACD,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,gBAAgB,QACd,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,CACnC,CAAC,EAAyB,EAAE,KAAK,EAAE,EAAE,CAAC,CACpC,oBAAC,oBAAoB,IACnB,aAAa,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE,EAChC,eAAe,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,EACpC,YAAY,EAAE,EAAE,CAAC,WAAW,CAAC,YAAY,EACzC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,WAAW,EACvC,uBAAuB,EACrB,CAAC,CAAC,CACA,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ;oBAC7B,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM;oBAC3B,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAC7B,EAEH,eAAe,EACb,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAEpD,qBAAqB,EACnB,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,EAE1D,oBAAoB,EAClB,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,EAEzD,GAAG,EAAE,KAAK,GACV,CACH,CACF,CACgB,CACpB,CACG,CACL,CACJ,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { IMonitoredIntegration } from \"@syndesis/models\";\nimport {\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListSkeleton,\n  IListViewToolbarProps,\n  ListViewToolbar\n} from \"@syndesis/ui\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  match: any;\n  loading: boolean;\n  monitoredIntegrations: IMonitoredIntegration[];\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <Link\n              to={`${this.props.match}/import`}\n              className={'btn btn-default'}\n            >\n              Import\n            </Link>\n            <Link\n              to={`${this.props.match}/new`}\n              className={'btn btn-primary'}\n            >\n              Create Integration\n            </Link>\n          </div>\n        </ListViewToolbar>\n        <div className={'container-fluid'}>\n          {this.props.loading ? (\n            <IntegrationsListSkeleton\n              width={800}\n              style={{\n                backgroundColor: '#FFF',\n                marginTop: 30\n              }}\n            />\n          ) : (\n            <IntegrationsList>\n              {this.props.monitoredIntegrations.map(\n                (mi: IMonitoredIntegration, index) => (\n                  <IntegrationsListItem\n                    integrationId={mi.integration.id}\n                    integrationName={mi.integration.name}\n                    currentState={mi.integration.currentState}\n                    targetState={mi.integration.targetState}\n                    isConfigurationRequired={\n                      !!(\n                        mi.integration.board.warnings ||\n                        mi.integration.board.errors ||\n                        mi.integration.board.notices\n                      )\n                    }\n                    monitoringValue={\n                      mi.monitoring && mi.monitoring.detailedState.value\n                    }\n                    monitoringCurrentStep={\n                      mi.monitoring && mi.monitoring.detailedState.currentStep\n                    }\n                    monitoringTotalSteps={\n                      mi.monitoring && mi.monitoring.detailedState.totalSteps\n                    }\n                    key={index}\n                  />\n                )\n              )}\n            </IntegrationsList>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n"]}