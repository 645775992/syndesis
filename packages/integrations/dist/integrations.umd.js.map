{"version":3,"file":"integrations.umd.js","sources":["../src/components/IntegrationsListView.tsx","../src/pages/IntegrationsPage.tsx","../src/app/IntegrationsApp.tsx"],"sourcesContent":["import { IMonitoredIntegration } from \"@syndesis/models\";\nimport {\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListSkeleton,\n  IListViewToolbarProps,\n  ListViewToolbar\n} from \"@syndesis/ui\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  match: any;\n  loading: boolean;\n  monitoredIntegrations: IMonitoredIntegration[];\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <Link\n              to={`${this.props.match}/import`}\n              className={'btn btn-default'}\n            >\n              Import\n            </Link>\n            <Link\n              to={`${this.props.match}/new`}\n              className={'btn btn-primary'}\n            >\n              Create Integration\n            </Link>\n          </div>\n        </ListViewToolbar>\n        <div className={'container-fluid'}>\n          {this.props.loading ? (\n            <IntegrationsListSkeleton\n              width={800}\n              style={{\n                backgroundColor: '#FFF',\n                marginTop: 30\n              }}\n            />\n          ) : (\n            <IntegrationsList>\n              {this.props.monitoredIntegrations.map(\n                (mi: IMonitoredIntegration, index) => (\n                  <IntegrationsListItem\n                    integrationId={mi.integration.id}\n                    integrationName={mi.integration.name}\n                    currentState={mi.integration.currentState}\n                    targetState={mi.integration.targetState}\n                    isConfigurationRequired={\n                      !!(\n                        mi.integration.board.warnings ||\n                        mi.integration.board.errors ||\n                        mi.integration.board.notices\n                      )\n                    }\n                    monitoringValue={\n                      mi.monitoring && mi.monitoring.detailedState.value\n                    }\n                    monitoringCurrentStep={\n                      mi.monitoring && mi.monitoring.detailedState.currentStep\n                    }\n                    monitoringTotalSteps={\n                      mi.monitoring && mi.monitoring.detailedState.totalSteps\n                    }\n                    key={index}\n                  />\n                )\n              )}\n            </IntegrationsList>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from \"@syndesis/api\";\nimport { IConnection, IMonitoredIntegration } from \"@syndesis/models\";\nimport { IActiveFilter, IFilterType, ISortType } from \"@syndesis/ui\";\nimport { IListViewToolbarAbstractComponent, ListViewToolbarAbstractComponent } from \"@syndesis/utils\";\nimport * as React from 'react';\nimport { IntegrationsListView } from \"../components/IntegrationsListView\";\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IMonitoredIntegration[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IMonitoredIntegration) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration.flows.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow.steps\n                .filter(s => s.connection)\n                .map(s => s.connection.name.toLowerCase())\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration.currentState.localeCompare(\n        right.integration.currentState\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: 'Filter by Name',\n  title: 'Name'\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: 'Filter by Connection',\n  title: 'Connection'\n};\n\nfunction getFilterTypes(connections: IConnection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name\n      }))\n    } as IFilterType\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: 'Name'\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: 'Status'\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport default class IntegrationsPage extends ListViewToolbarAbstractComponent<\n  {},\n  IListViewToolbarAbstractComponent\n> {\n  public state = {\n    activeFilters: [] as IActiveFilter[],\n    currentFilterType: filterByName,\n    currentSortType: sortByName.title,\n    currentValue: '',\n    filterCategory: null,\n    isSortAscending: true\n  };\n\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, loading, hasData }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => {\n              const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                integrationsData.items,\n                this.state.activeFilters,\n                this.state.currentSortType,\n                this.state.isSortAscending\n              );\n              return (\n                <IntegrationsListView\n                  loading={!hasData && loading}\n                  match={'TODO'}\n                  monitoredIntegrations={filteredAndSortedIntegrations}\n                  filterTypes={getFilterTypes(connectionsData.items)}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedIntegrations.length}\n                  {...this.state}\n                  onUpdateCurrentValue={this.onUpdateCurrentValue}\n                  onValueKeyPress={this.onValueKeyPress}\n                  onFilterAdded={this.onFilterAdded}\n                  onSelectFilterType={this.onSelectFilterType}\n                  onFilterValueSelected={this.onFilterValueSelected}\n                  onRemoveFilter={this.onRemoveFilter}\n                  onClearFilters={this.onClearFilters}\n                  onToggleCurrentSortDirection={\n                    this.onToggleCurrentSortDirection\n                  }\n                  onUpdateCurrentSortType={this.onUpdateCurrentSortType}\n                />\n              );\n            }}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport IntegrationsPage from \"../pages/IntegrationsPage\";\n\nexport interface IIntegrationsAppProps {\n  mountpoint: string;\n}\n\nexport class IntegrationsApp extends React.Component<IIntegrationsAppProps> {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={this.props.mountpoint}\n          exact={true}\n          component={IntegrationsPage}\n        />\n      </Switch>\n    );\n  }\n}\n"],"names":["tslib_1.__extends","IntegrationsListView","React.createElement","ListViewToolbar","this","props","className","Link","to","match","loading","IntegrationsListSkeleton","width","style","backgroundColor","marginTop","IntegrationsList","monitoredIntegrations","map","mi","index","IntegrationsListItem","integrationId","integration","id","integrationName","name","currentState","targetState","isConfigurationRequired","board","warnings","errors","notices","monitoringValue","monitoring","detailedState","value","monitoringCurrentStep","currentStep","monitoringTotalSteps","totalSteps","key","React.Component","filterByName","filterType","placeholder","title","filterByConnection","filterValues","sortByName","isNumeric","sortTypes","_this","activeFilters","currentFilterType","currentSortType","currentValue","filterCategory","isSortAscending","IntegrationsPage","WithMonitoredIntegrations","_a","integrationsData","hasData","WithConnections","connections","connectionsData","filteredAndSortedIntegrations","integrations","forEach","filter","valueToLower","toLowerCase","includes","flows","reduce","acc","flow","steps","s","connection","found","n","sort","miA","miB","left","right","localeCompare","getFilteredAndSortedIntegrations","items","state","filterTypes","tslib_1.__assign","c","resultsCount","length","onUpdateCurrentValue","onValueKeyPress","onFilterAdded","onSelectFilterType","onFilterValueSelected","onRemoveFilter","onClearFilters","onToggleCurrentSortDirection","onUpdateCurrentSortType","ListViewToolbarAbstractComponent","IntegrationsApp","Switch","Route","path","mountpoint","exact","component"],"mappings":"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"}