{"version":3,"file":"ConnectionsListView.js","sourceRoot":"","sources":["../../src/components/ConnectionsListView.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,eAAe,EAAyB,eAAe,EAAE,MAAM,cAAc,CAAC;AACvG,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAQxC,MAAM,OAAO,mBAAoB,SAAQ,KAAK,CAAC,SAE9C;IACQ,MAAM;QACX,OAAO,CACL;YACE,oBAAC,eAAe,oBAAK,IAAI,CAAC,KAAK;gBAC7B,6BAAK,SAAS,EAAC,YAAY;oBACzB,oBAAC,IAAI,IACH,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,MAAM,EAC/B,SAAS,EAAE,iBAAiB,wBAGvB,CACH,CACU;YAClB,6BAAK,SAAS,EAAE,iBAAiB;gBAC/B,oBAAC,eAAe,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IACzC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CACxC,oBAAC,cAAc,IACb,IAAI,EAAE,CAAC,CAAC,IAAI,EACZ,WAAW,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE,EAChC,IAAI,EAAE,iBAAiB,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAClD,GAAG,EAAE,KAAK,GACV,CACH,CAAC,CACc,CACd,CACL,CACJ,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { IConnection } from \"@syndesis/models\";\nimport { ConnectionCard, ConnectionsGrid, IListViewToolbarProps, ListViewToolbar } from \"@syndesis/ui\";\nimport { getConnectionIcon } from \"@syndesis/utils\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  baseurl: string;\n  loading: boolean;\n  connections: IConnection[];\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <Link\n              to={`${this.props.baseurl}/new`}\n              className={'btn btn-primary'}\n            >\n              Create Connection\n            </Link>\n          </div>\n        </ListViewToolbar>\n        <div className={'container-fluid'}>\n          <ConnectionsGrid loading={this.props.loading}>\n            {this.props.connections.map((c, index) => (\n              <ConnectionCard\n                name={c.name}\n                description={c.description || ''}\n                icon={getConnectionIcon(c, process.env.PUBLIC_URL)}\n                key={index}\n              />\n            ))}\n          </ConnectionsGrid>\n        </div>\n      </>\n    );\n  }\n}\n"]}