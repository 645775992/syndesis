name: Unit Tests 1.x branch

on: pull_request

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      app: ${{ steps.filter.outputs.app }}
      docs: ${{ steps.filter.outputs.docs }}
      ui: ${{ steps.filter.outputs.ui }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        # Added all possible filters even if we just use app
        filters: |
          app:
            - 'app/**'
          docs:
            - 'doc/**'
          ui:
            - 'app/ui-react/**'
            - 'package.json'
            - 'yarn.lock'
            - 'node_modules/**'


  integration-tests:
    needs: changes
    if: ${{ needs.changes.outputs.app == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build Syndesis with Unit Testing
        run: tools/bin/syndesis build --dependencies --batch-mode --all-images --docker
      # Send SonarCloud statistics
      - name: Set up JDK 11 for SonarCloud
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Java 11
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{env.SONAR_TOKEN != ''}}
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
      - name: Send analysis to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{env.SONAR_TOKEN != ''}}
        run: cd app; ./mvnw -q -B -pl '!:extension-bom,!:integration-bom' jacoco:report && ./mvnw -B -N -Dsonar.login=${{secrets.SONAR_TOKEN}} sonar:sonar -Dsonar.sources=$(find . -wholename "*/src/main/java" | sed -z 's/\n/,/g;s/,$/\n/') -Dsonar.java.binaries=$(find . -wholename "*/target/classes" | sed -z 's/\n/,/g;s/,$/\n/')

