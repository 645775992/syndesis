apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Job}}
spec:
  backoffLimit: 4
  parallelism: 1
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: {{.Job}}
      labels:
        job-name: {{.Job}}
    spec:
      serviceAccountName: syndesis-operator
      restartPolicy: OnFailure
      volumes:
      - name: tmp-pgdata
        emptyDir: {}
      containers:
      - name: backup-db-compiler
        image: {{.Image}}
        volumeMounts:
        - mountPath: /pgdata
          name: tmp-pgdata
        env:
        - name: PGHOST
          value: {{.Host}}
        - name: PGPORT
          value: "{{.Port}}"
        - name: PGUSER
          value: {{.User}}
        - name: PGPASSWORD
          value: {{.Password}}
        - name: PGDATABASE
          value: {{.Name}}
        command:
        - /bin/bash
        args:
        - "-c"
        - "mkdir -p {{ .FileDir}} && pg_dump --file='{{ .FileDir}}/{{.FileName}}' --format=custom && sleep 5 && touch /pgdata/pg-dump-complete"
      - name: backup-db-logger
        image: {{.LoggerImage}}
        volumeMounts:
        - mountPath: /pgdata
          name: tmp-pgdata
          readOnly: true
        command:
        - /bin/bash
        - "-c"
        - |
          (while true; do if [[ -f "/pgdata/pg-dump-complete" ]]; then sleep 5; break; fi; sleep 3; done)
          cat {{ .FileDir}}/{{- .FileName}}
          sleep 120
