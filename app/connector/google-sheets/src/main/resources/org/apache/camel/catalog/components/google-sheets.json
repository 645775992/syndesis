{
 "component": {
    "kind": "component",
    "scheme": "google-sheets",
    "syntax": "google-sheets:apiName/methodName",
    "title": "Google Sheets",
    "description": "The google-sheets component provides access to Google Sheets.",
    "label": "api,cloud,sheets",
    "deprecated": false,
    "deprecationNote": "",
    "async": false,
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": false,
    "javaType": "org.apache.camel.component.google.sheets.GoogleSheetsComponent",
    "firstVersion": "2.23.0",
    "groupId": "org.apache.camel",
    "artifactId": "camel-google-sheets",
    "verifiers": "parameters,connectivity",
    "version": "2.23.0-SNAPSHOT"
  },
  "componentProperties": {
    "configuration": { "kind": "property", "displayName": "Configuration", "group": "common", "type": "object", "javaType": "org.apache.camel.component.google.sheets.GoogleSheetsConfiguration", "deprecated": false, "secret": false, "description": "To use the shared configuration" },
    "clientFactory": { "kind": "property", "displayName": "Client Factory", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "org.apache.camel.component.google.sheets.GoogleSheetsClientFactory", "deprecated": false, "secret": false, "description": "To use the GoogleSheetsClientFactory as factory for creating the client. Will by default use BatchGoogleSheetsClientFactory" },
    "resolvePropertyPlaceholders": { "kind": "property", "displayName": "Resolve Property Placeholders", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": true, "description": "Whether the component should resolve property placeholders on itself when starting. Only properties which are of String type can use property placeholders." }
  },
  "properties": {
    "apiName": { "kind": "path", "displayName": "Api Name", "group": "common", "required": true, "type": "object", "javaType": "org.apache.camel.component.google.sheets.internal.GoogleSheetsApiName", "enum": [ "SPREADSHEETS", "DATA" ], "deprecated": false, "secret": false, "description": "What kind of operation to perform" },
    "methodName": { "kind": "path", "displayName": "Method Name", "group": "common", "required": true, "type": "string", "javaType": "java.lang.String", "enum": [ "create", "get", "update", "append", "batchUpdate", "clear" ], "deprecated": false, "secret": false, "description": "What sub operation to use for the selected operation" },
    "accessToken": { "kind": "parameter", "displayName": "Access Token", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage." },
    "applicationName": { "kind": "parameter", "displayName": "Application Name", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Google Sheets application name. Example would be camel-google-sheets/1.0" },
    "clientId": { "kind": "parameter", "displayName": "Client Id", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Client ID of the sheets application" },
    "clientSecret": { "kind": "parameter", "displayName": "Client Secret", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Client secret of the sheets application" },
    "inBody": { "kind": "parameter", "displayName": "In Body", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Sets the name of a parameter to be passed in the exchange In Body" },
    "refreshToken": { "kind": "parameter", "displayName": "Refresh Token", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "OAuth 2 refresh token. Using this, the Google Sheets component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived." },
    "bridgeErrorHandler": { "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

